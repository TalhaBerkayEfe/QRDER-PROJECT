@model dynamic
@{
    ViewData["Title"] = "Menü";
}

<style>
    .menu-container {
        background: linear-gradient(135deg, #1a2a6c, #b21f1f, #fdbb2d);
        min-height: 100vh;
        padding: 2rem;
        width: 100%;
        margin-top: 80px; /* Navbar için boşluk bırak */
    }

    .menu-buttons {
        display: flex;
        justify-content: center;
        gap: 1rem;
        margin-bottom: 2rem;
        flex-wrap: wrap;
    }

    .menu-button {
        padding: 1rem 2rem;
        border: none;
        border-radius: 50px;
        background: rgba(255, 255, 255, 0.1);
        color: white;
        font-weight: bold;
        font-size: 1.1rem;
        cursor: pointer;
        transition: all 0.3s ease;
        backdrop-filter: blur(5px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    }

    .menu-button:hover {
        transform: translateY(-3px);
        background: rgba(255, 255, 255, 0.2);
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
    }

    .menu-button.active {
        background: rgba(255, 255, 255, 0.3);
        transform: scale(1.05);
    }

    .menu-section {
        display: none;
        animation: fadeIn 0.5s ease;
    }

    .menu-section.active {
        display: block;
    }

    .square-card {
        width: 200px;
        height: 200px;
        margin: 0 auto;
        border-radius: 20px;
        overflow: hidden;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        transition: all 0.3s ease;
        position: relative;
    }

    .square-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(45deg, rgba(255,255,255,0.1), rgba(255,255,255,0));
        z-index: 1;
    }

    .square-card:hover {
        transform: translateY(-10px) scale(1.02);
        box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4);
    }

    .square-card img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .square-card:hover img {
        transform: scale(1.1);
    }

    .square-card.qr {
        background: linear-gradient(45deg, #4facfe, #00f2fe);
    }

    .card {
        border: none;
        border-radius: 20px;
        overflow: hidden;
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        transition: all 0.3s ease;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        margin-bottom: 2rem;
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 40px rgba(0, 0, 0, 0.3);
        background: rgba(255, 255, 255, 0.15);
    }

    .card-body {
        padding: 1.5rem;
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(5px);
    }

    .card-title {
        color: white;
        font-weight: bold;
        font-size: 1.2rem;
        margin-bottom: 0.5rem;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
    }

    .card-text {
        color: rgba(255, 255, 255, 0.9);
        font-weight: 500;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .section-title {
        color: white;
        text-align: center;
        margin-bottom: 2rem;
        font-weight: bold;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        font-size: 2rem;
    }

    .row {
        margin: 0;
        padding: 0 1rem;
    }

    .order-button {
        position: absolute;
        bottom: 20px;
        left: 50%;
        transform: translateX(-50%);
        padding: 12px 30px;
        border: none;
        border-radius: 30px;
        background: rgba(255, 255, 255, 0.15);
        color: white;
        font-weight: bold;
        font-size: 1.1rem;
        cursor: pointer;
        transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        backdrop-filter: blur(8px);
        opacity: 0;
        z-index: 2;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        overflow: hidden;
        letter-spacing: 1px;
    }

    .order-button::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(
            120deg,
            transparent,
            rgba(255, 255, 255, 0.3),
            transparent
        );
        transition: all 0.6s;
    }

    .order-button:hover::before {
        left: 100%;
    }

    .square-card:hover .order-button {
        opacity: 1;
        bottom: 30px;
        transform: translateX(-50%) scale(1.05);
        background: rgba(255, 255, 255, 0.25);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
    }

    .order-button:hover {
        background: rgba(255, 255, 255, 0.35);
        transform: translateX(-50%) scale(1.1);
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.4);
    }

    .order-button:active {
        transform: translateX(-50%) scale(0.95);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    }

    @@keyframes buttonPulse {
        0% {
            box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.4);
        }
        70% {
            box-shadow: 0 0 0 10px rgba(255, 255, 255, 0);
        }
        100% {
            box-shadow: 0 0 0 0 rgba(255, 255, 255, 0);
        }
    }

    .order-button {
        animation: buttonPulse 2s infinite;
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px) scale(0.95);
        }
        to {
            opacity: 1;
            transform: translateY(0) scale(1);
        }
    }

    .animate-fade-in {
        animation: fadeInUp 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
    }

    /* Farklı kategoriler için farklı gradient renkleri */
    .ana-yemekler .square-card {
        background: linear-gradient(45deg, rgba(255, 107, 107, 0.8), rgba(255, 142, 142, 0.8));
    }

    .ara-yemekler .square-card {
        background: linear-gradient(45deg, rgba(79, 172, 254, 0.8), rgba(0, 242, 254, 0.8));
    }

    .icecekler .square-card {
        background: linear-gradient(45deg, rgba(67, 233, 123, 0.8), rgba(56, 249, 215, 0.8));
    }

    .tatlilar .square-card {
        background: linear-gradient(45deg, rgba(250, 112, 154, 0.8), rgba(254, 225, 64, 0.8));
    }

    /* Sepet Stilleri */
    .cart-button {
        position: relative;
        background: rgba(255, 255, 255, 0.2);
        border: none;
        border-radius: 50%;
        width: 45px;
        height: 45px;
        display: none;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        backdrop-filter: blur(8px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        transition: all 0.3s ease;
    }

    .cart-button:hover {
        transform: scale(1.1);
        background: rgba(255, 255, 255, 0.3);
    }

    .cart-count {
        position: absolute;
        top: -5px;
        right: -5px;
        background: #ff4757;
        color: white;
        border-radius: 50%;
        width: 25px;
        height: 25px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-size: 0.9rem;
    }

    .cart-container {
        position: fixed;
        top: 90px;
        right: -400px;
        width: 380px;
        height: calc(100vh - 110px);
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        padding: 20px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        transition: right 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        z-index: 999;
        overflow-y: auto;
    }

    .cart-container.active {
        right: 20px;
    }

    .cart-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding-bottom: 10px;
        border-bottom: 2px solid rgba(0, 0, 0, 0.1);
    }

    .cart-title {
        font-size: 1.5rem;
        font-weight: bold;
        color: #2f3542;
    }

    .cart-close {
        background: none;
        border: none;
        font-size: 1.5rem;
        cursor: pointer;
        color: #2f3542;
        transition: transform 0.3s ease;
    }

    .cart-close:hover {
        transform: rotate(90deg);
    }

    .cart-items {
        margin-bottom: 20px;
    }

    .cart-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px;
        margin-bottom: 10px;
        background: rgba(255, 255, 255, 0.5);
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .cart-item-info {
        flex-grow: 1;
    }

    .cart-item-name {
        font-weight: bold;
        color: #2f3542;
    }

    .cart-item-price {
        color: #747d8c;
    }

    .cart-item-quantity {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .quantity-btn {
        background: rgba(0, 0, 0, 0.1);
        border: none;
        border-radius: 5px;
        width: 25px;
        height: 25px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.2s ease;
    }

    .quantity-btn:hover {
        background: rgba(0, 0, 0, 0.2);
    }

    .cart-total {
        position: sticky;
        bottom: 0;
        background: white;
        padding: 15px;
        border-radius: 10px;
        box-shadow: 0 -5px 15px rgba(0, 0, 0, 0.1);
        margin-top: 20px;
    }

    .total-amount {
        font-size: 1.2rem;
        font-weight: bold;
        color: #2f3542;
    }

    .checkout-button {
        width: 100%;
        padding: 12px;
        background: #2ed573;
        color: white;
        border: none;
        border-radius: 10px;
        font-weight: bold;
        margin-top: 10px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .checkout-button:hover {
        background: #28c066;
        transform: translateY(-2px);
    }

    /* Navbar Stilleri */
    .navbar {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        background: rgba(26, 42, 108, 0.95);
        backdrop-filter: blur(10px);
        padding: 1rem 2rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        z-index: 1000;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .navbar-brand {
        color: white;
        font-size: 1.8rem;
        font-weight: 800;
        text-decoration: none;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
        letter-spacing: 1px;
        position: relative;
        padding: 0.5rem 0;
    }

    .navbar-brand::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 0;
        height: 2px;
        background: linear-gradient(90deg, #fdbb2d, #b21f1f);
        transition: width 0.3s ease;
    }

    .navbar-brand:hover::after {
        width: 100%;
    }

    .navbar-cart {
        display: flex;
        align-items: center;
        gap: 1.5rem;
    }

    .cart-button {
        position: relative;
        background: rgba(255, 255, 255, 0.1);
        border: 2px solid rgba(255, 255, 255, 0.2);
        border-radius: 50%;
        width: 50px;
        height: 50px;
        display: none;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        backdrop-filter: blur(8px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

    .cart-button.visible {
        display: flex;
        animation: buttonPop 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

    .cart-button:hover {
        transform: scale(1.1) rotate(5deg);
        background: rgba(255, 255, 255, 0.2);
        border-color: rgba(255, 255, 255, 0.3);
    }

    .cart-button:active {
        transform: scale(0.95);
    }

    .cart-count {
        position: absolute;
        top: -8px;
        right: -8px;
        background: #ff4757;
        color: white;
        border-radius: 50%;
        width: 24px;
        height: 24px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-size: 0.9rem;
        border: 2px solid rgba(255, 255, 255, 0.2);
        animation: countPop 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

    @@keyframes buttonPop {
        0% {
            transform: scale(0);
            opacity: 0;
        }
        100% {
            transform: scale(1);
            opacity: 1;
        }
    }

    @@keyframes countPop {
        0% {
            transform: scale(0);
        }
        50% {
            transform: scale(1.2);
        }
        100% {
            transform: scale(1);
        }
    }

    .cart-container {
        position: fixed;
        top: 80px;
        right: -400px;
        width: 380px;
        height: calc(100vh - 100px);
        background: rgba(255, 255, 255, 0.98);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        padding: 20px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        transition: right 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        z-index: 999;
        overflow-y: auto;
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .cart-container.active {
        right: 20px;
        animation: cartSlide 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

    @@keyframes cartSlide {
        0% {
            transform: translateX(100px);
            opacity: 0;
        }
        100% {
            transform: translateX(0);
            opacity: 1;
        }
    }

    .cart-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 2px solid rgba(0, 0, 0, 0.1);
    }

    .cart-title {
        font-size: 1.8rem;
        font-weight: 800;
        color: #2f3542;
        letter-spacing: 0.5px;
    }

    .cart-close {
        background: none;
        border: none;
        font-size: 2rem;
        cursor: pointer;
        color: #2f3542;
        transition: all 0.3s ease;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
    }

    .cart-close:hover {
        transform: rotate(90deg);
        background: rgba(0, 0, 0, 0.05);
    }

    .cart-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px;
        margin-bottom: 15px;
        background: rgba(255, 255, 255, 0.5);
        border-radius: 15px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
        border: 1px solid rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease;
    }

    .cart-item:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
    }

    .cart-item-info {
        flex-grow: 1;
    }

    .cart-item-name {
        font-weight: 700;
        color: #2f3542;
        font-size: 1.1rem;
        margin-bottom: 5px;
    }

    .cart-item-price {
        color: #747d8c;
        font-weight: 500;
    }

    .cart-item-quantity {
        display: flex;
        align-items: center;
        gap: 12px;
        background: rgba(0, 0, 0, 0.03);
        padding: 5px 10px;
        border-radius: 20px;
    }

    .quantity-btn {
        background: rgba(0, 0, 0, 0.1);
        border: none;
        border-radius: 50%;
        width: 28px;
        height: 28px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.2s ease;
        font-weight: bold;
        color: #2f3542;
    }

    .quantity-btn:hover {
        background: rgba(0, 0, 0, 0.15);
        transform: scale(1.1);
    }

    .quantity-btn:active {
        transform: scale(0.95);
    }

    .cart-total {
        position: sticky;
        bottom: 0;
        background: white;
        padding: 20px;
        border-radius: 15px;
        box-shadow: 0 -5px 20px rgba(0, 0, 0, 0.1);
        margin-top: 20px;
        border: 1px solid rgba(0, 0, 0, 0.05);
    }

    .total-amount {
        font-size: 1.4rem;
        font-weight: 800;
        color: #2f3542;
        margin-bottom: 15px;
    }

    .checkout-button {
        width: 100%;
        padding: 15px;
        background: linear-gradient(45deg, #2ed573, #28c066);
        color: white;
        border: none;
        border-radius: 12px;
        font-weight: bold;
        font-size: 1.1rem;
        cursor: pointer;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 1px;
    }

    .checkout-button:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(46, 213, 115, 0.3);
    }

    .checkout-button:active {
        transform: translateY(0);
    }

    .menu-container {
        margin-top: 80px; /* Navbar için boşluk bırak */
    }
</style>

<div class="navbar">
    <a href="/" class="navbar-brand">QRDER</a>
    <div class="navbar-cart">
        <button class="cart-button" onclick="toggleCart()">
            <i class="fas fa-shopping-cart" style="font-size: 1.2rem; color: white;"></i>
            <span class="cart-count">0</span>
        </button>
    </div>
</div>

<div class="menu-container">
    <!-- Sepet Container -->
    <div class="cart-container">
        <div class="cart-header">
            <h2 class="cart-title">Sepetim</h2>
            <button class="cart-close" onclick="toggleCart()">×</button>
        </div>
        <div class="cart-items">
            <!-- Sepet öğeleri buraya dinamik olarak eklenecek -->
        </div>
        <div class="cart-total">
            <div class="total-amount">Toplam: <span id="total-amount">0.00</span> TL</div>
            <button class="checkout-button" onclick="checkout()">Siparişi Tamamla</button>
        </div>
    </div>

    <div class="menu-buttons">
        <button class="menu-button active" onclick="showSection('ana-yemekler')">Ana Yemekler</button>
        <button class="menu-button" onclick="showSection('ara-yemekler')">Ara Yemekler</button>
        <button class="menu-button" onclick="showSection('icecekler')">İçecekler</button>
        <button class="menu-button" onclick="showSection('tatlilar')">Tatlılar</button>
    </div>

    <div id="ana-yemekler" class="menu-section active">
        <h3 class="section-title">Ana Yemekler</h3>
        <div class="row">
            @foreach (var item in Model.AnaYemekler)
            {
                <div class="col-md-4 mb-4">
                    <div class="card">
                        @if (!string.IsNullOrEmpty(item.AnaYemekGorsel))
                        {
                            <div class="square-card">
                                <img src="@item.AnaYemekGorsel" alt="@item.AnaYemek1">
                            </div>
                        }
                        <div class="card-body">
                            <h5 class="card-title">@item.AnaYemek1</h5>
                            <p class="card-text">Fiyat: @item.AnaYemekFiyat TL</p>
                            <button class="order-button animate-fade-in" onclick="siparisVer('@item.AnaYemek1', @item.AnaYemekFiyat)">Sipariş Ver</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <div id="ara-yemekler" class="menu-section">
        <h3 class="section-title">Ara Yemekler</h3>
        <div class="row">
            @foreach (var item in Model.AraYemekler)
            {
                <div class="col-md-4 mb-4">
                    <div class="card">
                        @if (!string.IsNullOrEmpty(item.AraYemekGorsel))
                        {
                            <div class="square-card">
                                <img src="@item.AraYemekGorsel" alt="@item.AraYemek1">
                            </div>
                        }
                        <div class="card-body">
                            <h5 class="card-title">@item.AraYemek1</h5>
                            <p class="card-text">Fiyat: @item.AraYemekFiyat TL</p>
                            <button class="order-button animate-fade-in" onclick="siparisVer('@item.AraYemek1', @item.AraYemekFiyat)">Sipariş Ver</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <div id="icecekler" class="menu-section">
        <h3 class="section-title">İçecekler</h3>
        <div class="row">
            @foreach (var item in Model.Icecekler)
            {
                <div class="col-md-4 mb-4">
                    <div class="card">
                        @if (!string.IsNullOrEmpty(item.IceceklerGorsel))
                        {
                            <div class="square-card">
                                <img src="@item.IceceklerGorsel" alt="@item.Icecekler1">
                            </div>
                        }
                        <div class="card-body">
                            <h5 class="card-title">@item.Icecekler1</h5>
                            <p class="card-text">Fiyat: @item.IceceklerFiyat TL</p>
                            <button class="order-button animate-fade-in" onclick="siparisVer('@item.Icecekler1', @item.IceceklerFiyat)">Sipariş Ver</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <div id="tatlilar" class="menu-section">
        <h3 class="section-title">Tatlılar</h3>
        <div class="row">
            @foreach (var item in Model.Tatlilar)
            {
                <div class="col-md-4 mb-4">
                    <div class="card">
                        @if (!string.IsNullOrEmpty(item.TatlilarGorsel))
                        {
                            <div class="square-card">
                                <img src="@item.TatlilarGorsel" alt="@item.Tatlilar1">
                            </div>
                        }
                        <div class="card-body">
                            <h5 class="card-title">@item.Tatlilar1</h5>
                            <p class="card-text">Fiyat: @item.TatlilarFiyat TL</p>
                            <button class="order-button animate-fade-in" onclick="siparisVer('@item.Tatlilar1', @item.TatlilarFiyat)">Sipariş Ver</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<script>
    function showSection(sectionId) {
        // Tüm bölümleri gizle
        document.querySelectorAll('.menu-section').forEach(section => {
            section.classList.remove('active');
        });

        // Tüm butonlardan active sınıfını kaldır
        document.querySelectorAll('.menu-button').forEach(button => {
            button.classList.remove('active');
        });

        // Seçilen bölümü göster
        document.getElementById(sectionId).classList.add('active');

        // Tıklanan butona active sınıfını ekle
        event.target.classList.add('active');
    }

    let cart = [];
    let total = 0;

    function toggleCart() {
        const cartContainer = document.querySelector('.cart-container');
        cartContainer.classList.toggle('active');
    }

    function updateCartCount() {
        const cartCount = document.querySelector('.cart-count');
        const cartButton = document.querySelector('.cart-button');
        const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
        
        cartCount.textContent = totalItems;
        
        // Sepet boşsa butonu gizle, doluysa göster
        if (totalItems > 0) {
            cartButton.classList.add('visible');
        } else {
            cartButton.classList.remove('visible');
            // Sepet boşsa sepet panelini de kapat
            const cartContainer = document.querySelector('.cart-container');
            cartContainer.classList.remove('active');
        }
    }

    function updateTotal() {
        total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
        document.getElementById('total-amount').textContent = total.toFixed(2);
    }

    function updateCartDisplay() {
        const cartItems = document.querySelector('.cart-items');
        cartItems.innerHTML = cart.map((item, index) => `
            <div class="cart-item">
                <div class="cart-item-info">
                    <div class="cart-item-name">${item.name}</div>
                    <div class="cart-item-price">${item.price.toFixed(2)} TL</div>
                </div>
                <div class="cart-item-quantity">
                    <button class="quantity-btn" onclick="updateQuantity(${index}, -1)">-</button>
                    <span>${item.quantity}</span>
                    <button class="quantity-btn" onclick="updateQuantity(${index}, 1)">+</button>
                </div>
            </div>
        `).join('');
        updateTotal();
    }

    function updateQuantity(index, change) {
        cart[index].quantity += change;
        if (cart[index].quantity <= 0) {
            cart.splice(index, 1);
        }
        updateCartCount();
        updateCartDisplay();
    }

    function siparisVer(urunAdi, fiyat) {
        const existingItem = cart.find(item => item.name === urunAdi);
        
        if (existingItem) {
            existingItem.quantity++;
        } else {
            cart.push({
                name: urunAdi,
                price: fiyat,
                quantity: 1
            });
        }

        updateCartCount();
        updateCartDisplay();
    }

    function checkout() {
        if (cart.length === 0) {
            alert('Sepetiniz boş!');
            return;
        }

        // Sipariş detaylarını oluştur
        const siparisDetay = cart.map(item => 
            `${item.name} (${item.quantity} adet) - ${(item.price * item.quantity).toFixed(2)} TL`
        ).join('\n');

        // Siparişi kaydet
        fetch('/Data/SaveOrder', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                masaNo: prompt('Lütfen masa numaranızı girin:'),
                siparisDetay: siparisDetay,
                toplamFiyat: total,
                durum: 'Beklemede'
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('Siparişiniz alındı! Toplam: ' + total.toFixed(2) + ' TL');
                cart = [];
                updateCartCount();
                updateCartDisplay();
                toggleCart();
            } else {
                alert('Sipariş kaydedilirken bir hata oluştu!');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Sipariş kaydedilirken bir hata oluştu!');
        });
    }

    // Sayfa kaydırma animasyonu için Intersection Observer
    document.addEventListener('DOMContentLoaded', function() {
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('animate-fade-in');
                }
            });
        }, {
            threshold: 0.1
        });

        document.querySelectorAll('.card').forEach(card => {
            observer.observe(card);
        });
    });
</script> 